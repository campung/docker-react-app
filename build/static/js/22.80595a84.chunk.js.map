{"version":3,"sources":["views/pages/register/Register.js"],"names":["Register","useState","setAddress","addressDetail","setAddressDetail","isOpenPost","setIsOpenPost","onChangeOpenPost","useEffect","className","md","lg","xl","style","display","justifyContent","onDrop","files","FormData","append","getRootProps","getInputProps","width","height","border","alignItems","type","fontSize","name","placeholder","autoComplete","onClick","readOnly","position","top","padding","autoClose","onComplete","data","console","log","fullAddr","address","extraAddr","addressType","bname","buildingName","zonecode","color","block"],"mappings":"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","file":"static/js/22.80595a84.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  CButton,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCol,\n  CContainer,\n  CForm,\n  CInput,\n  CInputGroup,\n  CInputGroupPrepend,\n  CInputGroupText,\n  CRow,\n} from \"@coreui/react\";\nimport CIcon from \"@coreui/icons-react\";\nimport DaumPostcode from \"react-daum-postcode\";\nimport Dropzone from \"react-dropzone\";\nimport Icon from \"@ant-design/icons\";\nimport axios from \"axios\";\n\nconst Register = () => {\n  const [address, setAddress] = useState(\"\"); // 주소\n  const [addressDetail, setAddressDetail] = useState(\"\"); // 상세주소\n  const [isOpenPost, setIsOpenPost] = useState(false);\n\n  const onChangeOpenPost = () => {\n    setIsOpenPost(!isOpenPost);\n  };\n\n  const onCompletePost = (data) => {\n    console.log(11, data);\n    let fullAddr = data.address;\n    let extraAddr = \"\";\n\n    if (data.addressType === \"R\") {\n      if (data.bname !== \"\") {\n        extraAddr += data.bname;\n      }\n      if (data.buildingName !== \"\") {\n        extraAddr +=\n          extraAddr !== \"\" ? `, ${data.buildingName}` : data.buildingName;\n      }\n      fullAddr += extraAddr !== \"\" ? ` (${extraAddr})` : \"\";\n    }\n\n    setAddress(data.zonecode);\n    setAddressDetail(fullAddr);\n  };\n  useEffect(() => {\n    return () => setIsOpenPost(false); // cleanup function을 이용\n  }, []);\n\n  const postCodeStyle = {\n    display: \"block\",\n    position: \"relative\",\n    top: \"0%\",\n    width: \"400px\",\n    height: \"400px\",\n    padding: \"7px\",\n  };\n\n  const dropHandler = (files) => {\n    let formData = new FormData();\n\n    const config = {\n      header: { \"content-type\": \"multipart/form-data\" },\n    };\n    formData.append(\"file\", files[0]);\n\n    // axios\n  };\n\n  return (\n    <div className=\"c-app c-default-layout flex-row align-items-center\">\n      <CContainer>\n        <CRow className=\"justify-content-center\">\n          <CCol md=\"9\" lg=\"7\" xl=\"6\">\n            <CCard className=\"mx-4\">\n              <CCardBody className=\"p-4\">\n                <CForm>\n                  <h1>Register</h1>\n                  <p className=\"text-muted\">Create your account</p>\n\n                  {/* dropzone */}\n                  <div\n                    style={{ display: \"flex\", justifyContent: \"space-between\" }}\n                  >\n                    <Dropzone onDrop={dropHandler}>\n                      {({ getRootProps, getInputProps }) => (\n                        <section>\n                          <div\n                            style={{\n                              width: 100,\n                              height: 40,\n                              border: \"1px solid lightgray\",\n                              display: \"flex\",\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                            }}\n                            {...getRootProps()}\n                          >\n                            <input {...getInputProps()} />\n                            <Icon type=\"plus\" style={{ fontSize: \"3rem\" }} />\n                          </div>\n                        </section>\n                      )}\n                    </Dropzone>\n                  </div>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-user\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"스토어명\"\n                      autoComplete=\"store_name\"\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"password\"\n                      placeholder=\"Password\"\n                      autoComplete=\"new-password\"\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText onClick={onChangeOpenPost}>\n                        @\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      readOnly\n                      type=\"text\"\n                      placeholder={addressDetail}\n                      autoComplete=\"address\"\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText onClick={onChangeOpenPost}>\n                        @\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      readOnly\n                      type=\"text\"\n                      placeholder=\"상세 주소\"\n                      autoComplete=\"address\"\n                    />\n                  </CInputGroup>\n\n                  {isOpenPost ? (\n                    <DaumPostcode\n                      style={postCodeStyle}\n                      autoClose\n                      onComplete={onCompletePost}\n                    />\n                  ) : null}\n\n                  <CInputGroup className=\"mb-3\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>@</CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"text\"\n                      placeholder=\"연락처\"\n                      autoComplete=\"phoneNumber\"\n                    />\n                  </CInputGroup>\n\n                  <CInputGroup className=\"mb-4\">\n                    <CInputGroupPrepend>\n                      <CInputGroupText>\n                        <CIcon name=\"cil-lock-locked\" />\n                      </CInputGroupText>\n                    </CInputGroupPrepend>\n                    <CInput\n                      type=\"password\"\n                      placeholder=\"Repeat password\"\n                      autoComplete=\"new-password\"\n                    />\n                  </CInputGroup>\n                  <CButton color=\"success\" block>\n                    Create Account\n                  </CButton>\n                </CForm>\n              </CCardBody>\n              {/* <CCardFooter className=\"p-4\">\n                <CRow>\n                  <CCol xs=\"12\" sm=\"6\">\n                    <CButton className=\"btn-facebook mb-1\" block>\n                      <span>facebook</span>\n                    </CButton>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"6\">\n                    <CButton className=\"btn-twitter mb-1\" block>\n                      <span>twitter</span>\n                    </CButton>\n                  </CCol>\n                </CRow>\n              </CCardFooter> */}\n            </CCard>\n          </CCol>\n        </CRow>\n      </CContainer>\n    </div>\n  );\n};\n\nexport default Register;\n"],"sourceRoot":""}